[{"/home/erison/Documents/Projetos/reddit-teste/src/index.js":"1","/home/erison/Documents/Projetos/reddit-teste/src/App.js":"2","/home/erison/Documents/Projetos/reddit-teste/src/components/Post.jsx":"3","/home/erison/Documents/Projetos/reddit-teste/src/utils/convertUnix.js":"4","/home/erison/Documents/Projetos/reddit-teste/src/components/PostList.jsx":"5","/home/erison/Documents/Projetos/reddit-teste/src/components/Header.jsx":"6","/home/erison/Documents/Projetos/reddit-reactjs/src/index.js":"7","/home/erison/Documents/Projetos/reddit-reactjs/src/App.js":"8","/home/erison/Documents/Projetos/reddit-reactjs/src/components/PostList.jsx":"9","/home/erison/Documents/Projetos/reddit-reactjs/src/components/Header.jsx":"10","/home/erison/Documents/Projetos/reddit-reactjs/src/components/Post.jsx":"11","/home/erison/Documents/Projetos/reddit-reactjs/src/utils/convertUnix.js":"12","/home/erison/Documents/Projetos/reddit-reactjs/src/Router.js":"13","/home/erison/Documents/Projetos/reddit-reactjs/src/components/SubsMenu.jsx":"14"},{"size":175,"mtime":1625833140494,"results":"15","hashOfConfig":"16"},{"size":1684,"mtime":1626198135796,"results":"17","hashOfConfig":"16"},{"size":605,"mtime":1625835580854,"results":"18","hashOfConfig":"16"},{"size":386,"mtime":1625834636022,"results":"19","hashOfConfig":"16"},{"size":239,"mtime":1626184998628,"results":"20","hashOfConfig":"16"},{"size":391,"mtime":1625835991054,"results":"21","hashOfConfig":"16"},{"size":175,"mtime":1625833140494,"results":"22","hashOfConfig":"23"},{"size":257,"mtime":1626455269680,"results":"24","hashOfConfig":"23"},{"size":2609,"mtime":1626447669797,"results":"25","hashOfConfig":"23"},{"size":891,"mtime":1626458082998,"results":"26","hashOfConfig":"23"},{"size":891,"mtime":1626456393303,"results":"27","hashOfConfig":"23"},{"size":386,"mtime":1625834636022,"results":"28","hashOfConfig":"23"},{"size":384,"mtime":1626378331156,"results":"29","hashOfConfig":"23"},{"size":722,"mtime":1626457462036,"results":"30","hashOfConfig":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1sgnvwm",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ggxr9k",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/erison/Documents/Projetos/reddit-teste/src/index.js",[],["62","63"],"/home/erison/Documents/Projetos/reddit-teste/src/App.js",["64"],"/home/erison/Documents/Projetos/reddit-teste/src/components/Post.jsx",[],"/home/erison/Documents/Projetos/reddit-teste/src/utils/convertUnix.js",[],"/home/erison/Documents/Projetos/reddit-teste/src/components/PostList.jsx",[],"/home/erison/Documents/Projetos/reddit-teste/src/components/Header.jsx",[],"/home/erison/Documents/Projetos/reddit-reactjs/src/index.js",[],["65","66"],"/home/erison/Documents/Projetos/reddit-reactjs/src/App.js",["67"],"/home/erison/Documents/Projetos/reddit-reactjs/src/components/PostList.jsx",["68"],"import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport Header from \"./Header\";\nimport Post from \"./Post\";\nimport LoadingSVG from '../svg/loading.svg'\n\nconst PostList = () => {\n\n    //states\n    const [isLoading, setIsLoading] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [defaultSubs, setDefaultSubs] = useState([])\n    const [error, setError] = useState(null)\n    const [after, setAfter] = useState(null)\n\n    //parametros\n    const { sub = 'popular' } = useParams()\n    const { feed = '' } = useParams()\n\n    //API\n    const DEFAULT_SUBS = `https://www.reddit.com/subreddits/default/.json?limit=100`\n    const API_URL = `https://www.reddit.com/r/${sub}/${feed}.json?limit=10`\n    const PAGINATED_URL = `https://www.reddit.com/r/${sub}/${feed}/.json?limit=10&after=${after}&count=10`\n\n    useEffect(() => {\n        setIsLoading(true)\n        setError(null)\n        setAfter(null)\n        console.log(API_URL)\n\n        fetchAPI(API_URL)\n        fetchSUBS()\n    },[feed, sub])\n\n    const fetchAPI = (url) => {\n        setIsLoading(true)\n        if(error) {\n        setError(null)\n        }\n\n        fetch(url)\n        .then(response => response.json())\n        .then(newResponse => {\n        setAfter(newResponse.data.after)\n        if (newResponse.data.before === null) {\n            setPosts(newResponse.data.children)\n        } else {\n            setPosts([...posts, ...newResponse.data.children])\n        }\n        })\n        .catch(error => {\n        setError(error)\n        })\n        .finally(() => {\n        setIsLoading(false)\n        })\n    }\n    const fetchSUBS = () => {\n        fetch(DEFAULT_SUBS)\n        .then(response => response.json())\n        .then(newResponse => setDefaultSubs(newResponse.data.children))\n        .catch(error => console.log(error))\n    }\n    \n    return ( \n        <>\n        <Header sub ={sub} defaultSubs={defaultSubs}/>\n        <div className=\"feed\">\n\n            {error === null ? \n            posts.map(post =><Post post={post.data} key={post.data.id}/>) \n            : \n            <div className=\"error-handling\">\n                <p>Error on loading posts.</p>\n                <button onClick={() => fetchAPI(API_URL)}>Try Again</button>\n            </div>\n            }\n\n            {isLoading && <div className=\"loading\"><img src={LoadingSVG} alt=\"Loading...\" /></div>}\n\n            {after &&  \n            <div className=\"ver-mais\">\n                <button onClick={() => fetchAPI(PAGINATED_URL)}>Load more</button>\n            </div>}\n        </div>\n        </>\n    );\n}\n \nexport default PostList;","/home/erison/Documents/Projetos/reddit-reactjs/src/components/Header.jsx",[],"/home/erison/Documents/Projetos/reddit-reactjs/src/components/Post.jsx",[],"/home/erison/Documents/Projetos/reddit-reactjs/src/utils/convertUnix.js",[],"/home/erison/Documents/Projetos/reddit-reactjs/src/Router.js",[],"/home/erison/Documents/Projetos/reddit-reactjs/src/components/SubsMenu.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":20,"column":5,"nodeType":"75","endLine":20,"endColumn":11,"suggestions":"76"},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":25,"nodeType":"81","messageId":"82","endLine":1,"endColumn":33},{"ruleId":"73","severity":1,"message":"83","line":33,"column":7,"nodeType":"75","endLine":33,"endColumn":18,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAPI'. Either include it or remove the dependency array.","ArrayExpression",["87"],["85"],["86"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'API_URL', 'fetchAPI', and 'fetchSUBS'. Either include them or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [feed, fetchAPI]",{"range":"93","text":"94"},"Update the dependencies array to be: [API_URL, feed, fetchAPI, fetchSUBS, sub]",{"range":"95","text":"96"},[639,645],"[feed, fetchAPI]",[1027,1038],"[API_URL, feed, fetchAPI, fetchSUBS, sub]"]