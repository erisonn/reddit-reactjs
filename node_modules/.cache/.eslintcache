[{"/home/erison/Documents/Projects/reddit-reactjs/src/index.js":"1","/home/erison/Documents/Projects/reddit-reactjs/src/App.js":"2","/home/erison/Documents/Projects/reddit-reactjs/src/Router.js":"3","/home/erison/Documents/Projects/reddit-reactjs/src/pages/feed.js":"4","/home/erison/Documents/Projects/reddit-reactjs/src/hooks/useApiRequest.js":"5","/home/erison/Documents/Projects/reddit-reactjs/src/utils/helpers.js":"6","/home/erison/Documents/Projects/reddit-reactjs/src/components/PostList/PostList.jsx":"7","/home/erison/Documents/Projects/reddit-reactjs/src/components/Post/Post.jsx":"8","/home/erison/Documents/Projects/reddit-reactjs/src/components/Loading/Loading.jsx":"9","/home/erison/Documents/Projects/reddit-reactjs/src/components/Error/Error.jsx":"10","/home/erison/Documents/Projects/reddit-reactjs/src/components/Header.jsx":"11","/home/erison/Documents/Projects/reddit-reactjs/src/components/SubsMenu.jsx":"12","/home/erison/Documents/Projects/reddit-reactjs/src/components/Nav/Nav.jsx":"13"},{"size":176,"mtime":1629131320191,"results":"14","hashOfConfig":"15"},{"size":309,"mtime":1629130538558,"results":"16","hashOfConfig":"15"},{"size":423,"mtime":1629134238492,"results":"17","hashOfConfig":"15"},{"size":973,"mtime":1629133024532,"results":"18","hashOfConfig":"15"},{"size":1483,"mtime":1629130244853,"results":"19","hashOfConfig":"15"},{"size":774,"mtime":1629125483380,"results":"20","hashOfConfig":"15"},{"size":529,"mtime":1629123853386,"results":"21","hashOfConfig":"15"},{"size":795,"mtime":1629125540224,"results":"22","hashOfConfig":"15"},{"size":142,"mtime":1629123418141,"results":"23","hashOfConfig":"15"},{"size":268,"mtime":1629124395418,"results":"24","hashOfConfig":"15"},{"size":704,"mtime":1629134286056,"results":"25","hashOfConfig":"15"},{"size":1078,"mtime":1629117131411,"results":"26","hashOfConfig":"15"},{"size":289,"mtime":1629131383979,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i9x9am",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/erison/Documents/Projects/reddit-reactjs/src/index.js",[],"/home/erison/Documents/Projects/reddit-reactjs/src/App.js",[],"/home/erison/Documents/Projects/reddit-reactjs/src/Router.js",[],"/home/erison/Documents/Projects/reddit-reactjs/src/pages/feed.js",[],"/home/erison/Documents/Projects/reddit-reactjs/src/hooks/useApiRequest.js",["56"],"import { useEffect, useState } from \"react\"\n\nconst useApiRequest = url => {\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [error, setError] = useState(null)\n    const [data, setData] = useState([])\n    // const [defaultSubs, setDefaultSubs] = useState([])\n    const [after, setAfter] = useState(null)\n    const pagination = after ? url + `&after=${after}&count=10` : ''    \n\n    const fetchApi = (url) => {\n        setIsLoading(true)\n        if(error) {\n            setError(null)\n        }\n        fetch(url)\n        .then(response => response.json())\n        .then(posts => {\n            setAfter(posts.data.after)\n            if(!posts.data.before) {\n                setData(posts.data.children)\n            } else {\n                setData([...data, ...posts.data.children])\n            }\n        })   \n        .catch(error => {\n            console.log(error)\n            setError('Error on load.')\n        })\n        .finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    // const fetchSUBS = () => {\n    //     fetch('https://www.reddit.com/subreddits/default/.json?limit=100')\n    //     .then(response => response.json())\n    //     .then(newResponse => setDefaultSubs(newResponse.data.children))\n    //     .catch(error => console.log(error))\n    // }\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        fetchApi(url)\n    }, [url])\n\n    return { isLoading, error, data, after, pagination , fetchApi }\n}\n\nexport default useApiRequest;",["57","58"],"/home/erison/Documents/Projects/reddit-reactjs/src/utils/helpers.js",[],"/home/erison/Documents/Projects/reddit-reactjs/src/components/PostList/PostList.jsx",[],"/home/erison/Documents/Projects/reddit-reactjs/src/components/Post/Post.jsx",[],"/home/erison/Documents/Projects/reddit-reactjs/src/components/Loading/Loading.jsx",[],"/home/erison/Documents/Projects/reddit-reactjs/src/components/Error/Error.jsx",[],"/home/erison/Documents/Projects/reddit-reactjs/src/components/Header.jsx",["59","60"],"/home/erison/Documents/Projects/reddit-reactjs/src/components/SubsMenu.jsx",[],"/home/erison/Documents/Projects/reddit-reactjs/src/components/Nav/Nav.jsx",[],{"ruleId":"61","severity":1,"message":"62","line":47,"column":8,"nodeType":"63","endLine":47,"endColumn":13,"suggestions":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":7,"column":13,"nodeType":"71","messageId":"72","endLine":7,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":7,"column":18,"nodeType":"71","messageId":"72","endLine":7,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'sub' is assigned a value but never used.","Identifier","unusedVar","'sort' is assigned a value but never used.",{"desc":"77","fix":"78"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchApi, url]",{"range":"79","text":"80"},[1375,1380],"[fetchApi, url]"]