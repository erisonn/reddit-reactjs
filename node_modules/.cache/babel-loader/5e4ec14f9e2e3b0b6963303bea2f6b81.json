{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/reddit-teste/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [after, setAfter] = useState(null);\n  const [feed, setFeed] = useState('hot');\n  const PAGINATED_URL = `https://www.reddit.com/r/reactjs/${feed}/.json?limit=3&after=${after}`;\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n    setAfter(null);\n    fetchAPI(`https://www.reddit.com/r/reactjs/${feed}/.json?limit=3`);\n  }, [feed]);\n\n  const fetchAPI = (url, responseHandling) => {\n    if (error) {\n      setError(null);\n      setIsLoading(true);\n    }\n\n    fetch(url).then(response => response.json()).then(newResponse => {\n      setAfter(newResponse.data.after);\n      setPosts(responseHandling);\n    }).catch(error => {\n      setError(error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setFeed: setFeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), after && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ver-mais\",\n        onClick: () => fetchAPI(PAGINATED_URL),\n        children: \"Load more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-handling\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error on loading posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchAPI(),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GdavHhcsyldOJwNvNa99o5J5bqo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/reddit-teste/src/App.js"],"names":["useEffect","useState","Header","PostList","App","isLoading","setIsLoading","posts","setPosts","error","setError","after","setAfter","feed","setFeed","PAGINATED_URL","fetchAPI","url","responseHandling","fetch","then","response","json","newResponse","data","catch","finally"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMc,aAAa,GAAI,oCAAmCF,IAAK,wBAAuBF,KAAM,EAA5F;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEAI,IAAAA,QAAQ,CAAE,oCAAmCH,IAAK,gBAA1C,CAAR;AACD,GANQ,EAMP,CAACA,IAAD,CANO,CAAT;;AAQA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,gBAAN,KAA2B;AAC1C,QAAGT,KAAH,EAAU;AACRC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACDa,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAI;AACnBX,MAAAA,QAAQ,CAACW,WAAW,CAACC,IAAZ,CAAiBb,KAAlB,CAAR;AACAH,MAAAA,QAAQ,CAACU,gBAAD,CAAR;AACD,KALD,EAMCO,KAND,CAMOhB,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KARD,EASCiB,OATD,CASS,MAAM;AACbpB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAXD;AAYD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAGP;AAAlB;AAAA;AAAA;AAAA;AAAA,cADA,EAECI,KAAK,iBAAI;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,MAAMK,QAAQ,CAACD,aAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFV,EAGCV,SAAS,iBAAI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHd;AAAA,oBAFF,EASGI,KAAK,iBACN;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMO,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GArDQZ,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [error, setError] = useState(null)\n  const [after, setAfter] = useState(null)\n  const [feed, setFeed] = useState('hot')\n  const PAGINATED_URL = `https://www.reddit.com/r/reactjs/${feed}/.json?limit=3&after=${after}`\n\n  useEffect(() => {\n    setIsLoading(true)\n    setError(null)\n    setAfter(null)\n\n    fetchAPI(`https://www.reddit.com/r/reactjs/${feed}/.json?limit=3`)\n  },[feed])\n\n  const fetchAPI = (url, responseHandling) => {\n    if(error) {\n      setError(null)\n      setIsLoading(true)\n    }\n    fetch(url)\n    .then(response => response.json())\n    .then(newResponse => {\n      setAfter(newResponse.data.after)\n      setPosts(responseHandling)\n    })\n    .catch(error => {\n      setError(error)\n    })\n    .finally(() => {\n      setIsLoading(false)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Header setFeed={setFeed}/>\n      <>\n      <PostList posts ={posts}/>\n      {after && <button className=\"ver-mais\" onClick={() => fetchAPI(PAGINATED_URL)}>Load more.</button>}\n      {isLoading && <p className=\"loading\">Loading...</p>}\n      </>\n\n      {/*tratamento de erro*/}\n      {error && \n      <div className=\"error-handling\">\n        <p>Error on loading posts.</p>\n        <button onClick={() => fetchAPI()}>Try Again</button>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}