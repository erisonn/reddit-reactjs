{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/reddit-teste/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('hot');\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n    fetchAPI();\n    console.log('Render App');\n  }, [feed]);\n\n  const fetchAPI = () => {\n    fetch(`https://www.reddit.com/r/reactjs/${feed}.json?raw_json=1&limit=10`).then(response => response.json()).then(newResponse => setPosts(newResponse.data.children.map(post => post.data))).catch(error => {\n      setError(error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setFeed: setFeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isLoading || /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error on loading posts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchAPI(),\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nEj9JK56YQ+/MyUbP0iF8E0325M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/reddit-teste/src/App.js"],"names":["useEffect","useState","Header","PostList","App","isLoading","setIsLoading","error","setError","posts","setPosts","feed","setFeed","fetchAPI","console","log","fetch","then","response","json","newResponse","data","children","map","post","catch","finally"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAK,IAAAA,QAAQ;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GALU,EAKT,CAACJ,IAAD,CALS,CAAT;;AAOA,QAAME,QAAQ,GAAG,MAAM;AACrBG,IAAAA,KAAK,CAAE,oCAAmCL,IAAK,2BAA1C,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAIV,QAAQ,CAACU,WAAW,CAACC,IAAZ,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA8BC,IAAI,IAAIA,IAAI,CAACH,IAA3C,CAAD,CAF7B,EAGCI,KAHD,CAGOlB,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KALD,EAMCmB,OAND,CAMS,MAAM;AACbpB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD;AASD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEM;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,SAAS,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGI;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGGJ,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHhB,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAG,MAAMQ,QAAQ,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnCQT,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [feed, setFeed] = useState('hot')\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null)\n    fetchAPI()\n    console.log('Render App')\n},[feed])\n\n  const fetchAPI = () => {\n    fetch(`https://www.reddit.com/r/reactjs/${feed}.json?raw_json=1&limit=10`)\n    .then(response => response.json())\n    .then(newResponse => setPosts(newResponse.data.children.map(post => post.data)))\n    .catch(error => {\n      setError(error)\n    })\n    .finally(() => {\n      setIsLoading(false)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Header setFeed={setFeed}/>\n      {isLoading || <PostList posts ={posts}/>}\n      {isLoading && <p>Loading...</p>}\n      <p>Error on loading posts.</p>\n      <button onClick={(() => fetchAPI())}>Try Again</button>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}