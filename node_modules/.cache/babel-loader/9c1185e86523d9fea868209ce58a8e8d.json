{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/reddit-teste/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [after, setAfter] = useState(null);\n  const [feed, setFeed] = useState('hot');\n  const [redditAPI, setRedditAPI] = useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n    setAfter(null);\n    fetchAPI();\n    console.log('Render App');\n  }, [feed]);\n\n  const fetchAPI = () => {\n    fetch(`https://www.reddit.com/r/reactjs/${feed}.json?raw_json=1&limit=3`).then(response => response.json()).then(newResponse => {\n      setPosts(newResponse.data.children.map(post => post.data));\n\n      if (posts.length !== 0) {\n        setPosts([...posts, ...newResponse.data.children.map(post => post.data)]);\n        setAfter(newResponse.data.after);\n      }\n    }).catch(error => {\n      setError(error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setFeed: setFeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isLoading || /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Load more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error on loading posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchAPI(),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LTWAN91MZwvA1U9SDigxBGzzV90=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/reddit-teste/src/App.js"],"names":["useEffect","useState","Header","PostList","App","isLoading","setIsLoading","posts","setPosts","error","setError","after","setAfter","feed","setFeed","redditAPI","setRedditAPI","fetchAPI","console","log","fetch","then","response","json","newResponse","data","children","map","post","length","catch","finally"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAENhB,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEAK,IAAAA,QAAQ;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAPU,EAOT,CAACN,IAAD,CAPS,CAFT;;AAWA,QAAMI,QAAQ,GAAG,MAAM;AACrBG,IAAAA,KAAK,CAAE,oCAAmCP,IAAK,0BAA1C,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAI;AACnBhB,MAAAA,QAAQ,CAACgB,WAAW,CAACC,IAAZ,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA8BC,IAAI,IAAIA,IAAI,CAACH,IAA3C,CAAD,CAAR;;AACA,UAAIlB,KAAK,CAACsB,MAAN,KAAiB,CAArB,EAAyB;AACvBrB,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGiB,WAAW,CAACC,IAAZ,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA8BC,IAAI,IAAIA,IAAI,CAACH,IAA3C,CAAd,CAAD,CAAR;AACAb,QAAAA,QAAQ,CAACY,WAAW,CAACC,IAAZ,CAAiBd,KAAlB,CAAR;AACD;AACF,KARD,EASCmB,KATD,CASOrB,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXD,EAYCsB,OAZD,CAYS,MAAM;AACbzB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdD;AAeD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGT,SAAS,iBACV;AAAA,8BACA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAGE;AAAlB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBAHF,EAQGF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARhB,EAWGI,KAAK,iBACN;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAG,MAAMQ,QAAQ,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvDQb,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [posts, setPosts] = useState([])\n  const [error, setError] = useState(null)\n  const [after, setAfter] = useState(null)\n  const [feed, setFeed] = useState('hot')\n  const [redditAPI, setRedditAPI] = \n\n  useEffect(() => {\n    setIsLoading(true)\n    setError(null)\n    setAfter(null)\n\n    fetchAPI()\n    console.log('Render App')\n},[feed])\n\n  const fetchAPI = () => {\n    fetch(`https://www.reddit.com/r/reactjs/${feed}.json?raw_json=1&limit=3`)\n    .then(response => response.json())\n    .then(newResponse => {\n      setPosts(newResponse.data.children.map(post => post.data))\n      if (posts.length !== 0 ) {\n        setPosts([...posts, ...newResponse.data.children.map(post => post.data)])\n        setAfter(newResponse.data.after)\n      }\n    })\n    .catch(error => {\n      setError(error)\n    })\n    .finally(() => {\n      setIsLoading(false)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Header setFeed={setFeed}/>\n      {isLoading ||\n      <>\n      <PostList posts ={posts}/>\n      <button>Load more.</button>\n      </>\n      }\n      {isLoading && <p>Loading...</p>}\n\n      {/*tratamento de erro*/}\n      {error && \n      <div>\n        <p>Error on loading posts.</p>\n        <button onClick={(() => fetchAPI())}>Try Again</button>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}