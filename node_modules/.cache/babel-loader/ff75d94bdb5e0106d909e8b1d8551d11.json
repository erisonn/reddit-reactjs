{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/reddit-teste/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('hot');\n\n  const fetchAPI = () => {\n    fetch(`https://www.reddit.com/r/reactjs/${feed}.json?raw_json=1&limit=10`).then(response => response.json()).then(newResponse => setPosts(newResponse.data.children.map(post => post.data))).catch(error => console.log(error));\n\n    if (posts.length === 0) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading === true) {\n      fetchAPI();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setFeed: setFeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isLoading === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lgTx/xk5/QWbCM/vCWUei07bv0s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/reddit-teste/src/App.js"],"names":["useEffect","useState","Header","PostList","App","isLoading","setIsLoading","posts","setPosts","feed","setFeed","fetchAPI","fetch","then","response","json","newResponse","data","children","map","post","catch","error","console","log","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAE,oCAAmCH,IAAK,2BAA1C,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAIR,QAAQ,CAACQ,WAAW,CAACC,IAAZ,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA8BC,IAAI,IAAIA,IAAI,CAACH,IAA3C,CAAD,CAF7B,EAGCI,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHhB;;AAIA,QAAIf,KAAK,CAACkB,MAAN,KAAiB,CAArB,EAAwB;AACtBnB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAVD;;AAYAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAS,KAAK,IAAlB,EAAwB;AACtBM,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,SAAS,KAAK,IAAd,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,gBAAyC,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAF5C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA/BQH,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList.jsx\";\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(null);\n  const [posts, setPosts] = useState([])\n  const [feed, setFeed] = useState('hot')\n\n  const fetchAPI = () => {\n    fetch(`https://www.reddit.com/r/reactjs/${feed}.json?raw_json=1&limit=10`)\n    .then(response => response.json())\n    .then(newResponse => setPosts(newResponse.data.children.map(post => post.data)))\n    .catch(error => console.log(error))\n    if (posts.length === 0) {\n      setIsLoading(true)\n    } else {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (isLoading === true) {\n      fetchAPI()\n    }\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Header setFeed={setFeed}/>\n      {isLoading === true ? <p>Loading...</p> : <PostList posts ={posts}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}